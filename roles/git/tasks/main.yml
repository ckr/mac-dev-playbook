---
- name: Install packages
  community.general.homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  loop: "{{ git_homebrew_packages }}"
  tags:
    - git_homebrew_packages

- name: Copy git dotfiles
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_user_dir }}/.{{ item | basename }}"
  with_fileglob:
    - "./dotfiles/*"
  tags:
    - files

- name: Ensure bin/ folder exists
  file:
    path: "{{ ansible_user_dir }}/bin"
    state: directory
  tags:
    - files

- name: Copy bin/ files
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_user_dir }}/bin/{{ item | basename }}"
    mode: ug+rwx,o+rx
  with_fileglob:
    - "./bin/*"
  tags:
    - files

- name: Create symlinks in bin folder
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ git_links }}"
  tags:
    - files

- name: Create .gitconfig file
  template:
    src: gitconfig.j2
    dest: "{{ ansible_user_dir }}/.gitconfig"
  tags:
    - files

- name: Check if pinentry-mac is installed
  stat:
    path: "/usr/local/bin/pinentry-mac"
  register: stat_pinentry
  tags:
    - git
    - pinentry

- name: Print stat_pinentry var
  debug:
    var: stat_pinentry.stat.exists
    verbosity: 3
  tags:
    - pinentry

- name: Configure gpg-agent to use pinentry-mac
  lineinfile:
    create: true
    path: "{{ ansible_user_dir }}/.gnupg/gpg-agent.conf"
    line: pinentry-program /usr/local/bin/pinentry-mac
    search_string: 'pinentry-program'
    state: present
  when: stat_pinentry.stat.exists
  tags:
    - git
    - pinentry
    - gpg
