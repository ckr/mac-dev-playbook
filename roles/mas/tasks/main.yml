---
- name: Install dependencies like mas
  community.general.homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  loop: "{{ mas_brew.dependencies }}"
  tags:
    - mas

- name: Check mas account status
  ansible.builtin.command: mas account
  register: mas_account_status
  failed_when: mas_account_status.rc > 1
  check_mode: false
  changed_when: false
  tags:
    - mas

- name: Sign in to mas when email and password are given
  ansible.builtin.command: mas signin "{{ mas.email }}" "{{ mas.password }}"
  register: mas_signin_status
  when:
    - mas_account_status.rc == 1
    - mas_email | bool
    - mas_password | bool
    - not mas_signin_dialog
  changed_when: false
  tags:
    - mas

- name: Sign in to mas when email only and prompt for password and MFA
  ansible.builtin.command: mas signin "{{ mas.email }}" "{{ mas.password }}" --dialog
  register: mas_signin_status
  when:
    - mas_signin_dialog
    - mas_account_status.rc == 1
    - mas_email | bool
  changed_when: false
  tags:
    - mas

- name: Ensure configured mas apps are installed
  community.general.mas:
    id: "{{ item.id | default(item) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ mas_installed | default([], true) }}"
  when: mas_installed is defined
  tags:
    - mas

- name: Ensure configured mas apps are not installed
  community.general.mas:
    id: "{{ item.id | default(item) }}"
    state: absent
  become: true
  loop: "{{ mas_uninstalled | default([], true) }}"
  when: mas_uninstalled is defined
  tags:
    - mas

- name: Upgrade all installed Mac App Store apps
  community.general.mas:
    upgrade_all: true
  when: mas_upgrade_all
